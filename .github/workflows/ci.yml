# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest
    container: drupal:9-apache
#    strategy:
#      matrix:
#        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
#        node-version: [14.x, 16.x, 18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Install system dependencies
        run: |
          apt-get update
          apt-get install -y git libicu-dev unzip
          docker-php-ext-install intl
      - name: Prepare global Drush and PHP configuration
        run: |
          mkdir $HOME/.drush
          cp ./drupal/drush.yml $HOME/.drush
          echo 'memory_limit = 512M' > /usr/local/etc/php/conf.d/drupal.ini
      - name: Create Acquia CMS project
        run: |
          rm -rf drupal
          composer create-project --no-install acquia/drupal-recommended-project drupal
        working-directory: /opt
      - name: Install Acquia CMS
        run: |
          sed -i -e 's!docroot!web!g' composer.json
          composer install
          composer require drupal/acquia_cms_common:^1.4 drupal/acquia_cms_starter
          acms acms:install --no-interaction acquia_cms_headless
          drush pm:enable acquia_cms_starter --yes
          chown -R www-data:www-data ./web/sites/default/files
        working-directory: /opt/drupal
      - name: Check for success
        run: |
          service apache2 start
          sleep 2
          curl --fail http://localhost/jsonapi
#
#      - name: Install Composer
#        run: |
#          /bin/sh ./drupal/install-composer.sh
#          ./composer.phar --version

#      - name: Copy Drush configuration
#        run: |
#          mkdir $HOME/.drush
#          cp ./drupal/drush.yml $HOME/.drush
#
#      - run: ./composer.phar create-project acquia/drupal-recommended-project /var/www/html/drupal

#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v3
#        with:
#          node-version: ${{ matrix.node-version }}

#      - run: yarn install --frozen-lockfile
#      - run: yarn prettier --check .
#      - run: yarn run lint
#      - name: Create Acquia CMS project
#        run: composer create-project acquia/drupal-recommended-project acms
#      - name: Install Acquia CMS with demo content, and start web server
#        run: |
#          ./vendor/bin/acms acms:install acquia_cms_headless --no-interaction
#          composer require drupal/acquia_cms_starter
#          ./vendor/bin/drush pm:enable acquia_cms_starter --yes
#          ./vendor/bin/drush serve --quiet 8080 &
#          sleep 2
#        working-directory: acms
#      - run: curl --fail http://127.0.0.1:8080/jsonapi
