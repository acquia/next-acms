# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest
    container: drupal:9-apache
    services:
      database:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: drupal
          MYSQL_USER: drupal
          MYSQL_PASSWORD: drupal
          MYSQL_ROOT_PASSWORD: root
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=10s --health-retries=10
    strategy:
      matrix:
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        node-version: [14.x, 16.x, 18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install npm and yarn
        run: |
          npm --version
          npm -g install yarn
      - run: yarn install --frozen-lockfile
      - run: yarn prettier --check .
      - run: yarn run lint
      - name: Install system dependencies for PHP and Composer
        run: |
          apt-get update
          apt-get install -y git libicu-dev mariadb-client unzip
          docker-php-ext-install intl
      - name: Prepare global Drush and PHP configuration
        run: |
          mkdir $HOME/.drush
          cp ./drupal/drush.yml $HOME/.drush
          echo 'memory_limit = 512M' > /usr/local/etc/php/conf.d/drupal.ini
      - name: Create Acquia CMS project
        run: |
          rm -rf drupal
          composer create-project --no-install acquia/drupal-recommended-project drupal
        working-directory: /opt
      - name: Install Acquia CMS
        run: |
          sed -i -e 's!docroot!web!g' composer.json
          composer install
          composer require drupal/acquia_cms_common:^1.4 drupal/acquia_cms_starter
          acms acms:install --no-interaction acquia_cms_headless
          drush pm:enable acquia_cms_starter --yes
          chown -R www-data:www-data ./web/sites/default/files
        working-directory: /opt/drupal
      - name: Check for success
        run: |
          service apache2 start
          sleep 2
          curl --fail http://localhost/jsonapi
      - name: Generate environment variables
        run: |
          drush php:script ./drupal/init-ci.php --root /opt/drupal > ./starters/basic-starter/.env.local
          chown -R www-data:www-data /opt/drupal/oauth_keys
      - run: yarn build
      - run: drush watchdog:show --severity 3
        if: failure()
        working-directory: /opt/drupal
      - name: Start application
        run: |
          yarn dev &
          sleep 10
      - name: Run tests
        run: docker run -v $PWD:/e2e -w /e2e cypress/included:10.3.0 --config baseUrl=http://host.docker.internal:3000
#      - run: yarn test:e2e
# docker run --interactive --tty -v $PWD:/e2e -w /e2e cypress/included:10.3.0 --config baseUrl=http://host.docker.internal:3000